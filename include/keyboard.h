#ifndef _KEYBOARD_H
#define _KEYBOARD_H

void keyboard_install(void);

int key_to_ascii(int key, int mods);
//int ktoasc(int key);

enum KEYB_MODS {
	KEYB_MOD_RCTRL = 0x01,
	KEYB_MOD_LCTRL = 0x02,
	KEYB_MOD_CTRL = KEYB_MOD_RCTRL | KEYB_MOD_LCTRL,
	KEYB_MOD_LSHIFT = 0x04,
	KEYB_MOD_RSHIFT = 0x08,
	KEYB_MOD_SHIFT = KEYB_MOD_LSHIFT | KEYB_MOD_RSHIFT,
	KEYB_MOD_LALT = 0x10,
	KEYB_MOD_ALTGR = 0x20, // Recognize it? :P
	KEYB_MOD_CAPS = 0x100,
	KEYB_MOD_SCRL = 0x200,
	KEYB_MOD_NUML = 0x400,

	//KEYB_MOD_UPCASE = KEYB_MOD_CAPS | KEYB_MOD_SHIFT,
};

extern char *nappien_nimet_qwerty[256];
//extern unsigned int kb_mods;

//esim. eventeissä olevat koodit
enum keycodes { /* let's put these here if someone needs them... */
KEYCODE__0x00 = 0x00,
	KEYCODE_ESC = 0x01,
	KEYCODE_1 = 0x02,
	KEYCODE_2,
	KEYCODE_3,
	KEYCODE_4,
	KEYCODE_5,
	KEYCODE_6,
	KEYCODE_7,
	KEYCODE_8,
	KEYCODE_9,
	KEYCODE_0, // 0x0b

KEYCODE__0x0c = 0x0c,
KEYCODE__0x0d = 0x0d,
//	KEYCODE_MINUS = 0x0c,
//	KEYCODE_ACCENT = 0x0d,

	KEYCODE_BACKSPACE = 0x0e,
	KEYCODE_TAB = 0x0f,

	KEYCODE_Q = 0x10,
	KEYCODE_W,
	KEYCODE_E,
	KEYCODE_R,
	KEYCODE_T,
	KEYCODE_Y,
	KEYCODE_U,
	KEYCODE_I,
	KEYCODE_O,
	KEYCODE_P, // = 0x19,

KEYCODE__0x1a = 0x1a,
KEYCODE__0x1b = 0x1b,
	KEYCODE_ENTER = 0x1c,

	KEYCODE_LCTRL = 0x1d,
	KEYCODE_RCTRL = KEYCODE_LCTRL | 0x80, // escaped, 0xe0

	KEYCODE_A = 0x1e,
	KEYCODE_S,
	KEYCODE_D,
	KEYCODE_F,
	KEYCODE_G,
	KEYCODE_H,
	KEYCODE_J,
	KEYCODE_K,
	KEYCODE_L, // = 0x26,

KEYCODE__0x27 = 0x27,
KEYCODE__0x28 = 0x28,
KEYCODE__0x29 = 0x29,
	KEYCODE_LSHIFT = 0x2a,
KEYCODE__0x2b = 0x2b,

	KEYCODE_Z = 0x2c,
	KEYCODE_X,
	KEYCODE_C,
	KEYCODE_V,
	KEYCODE_B,
	KEYCODE_N,
	KEYCODE_M, // = 0x32,

	KEYCODE_COMMA = 0x33,
	KEYCODE_DOT = 0x34,
KEYCODE__0x35 = 0x35,
	KEYCODE_RSHIFT = 0x36,
	KEYCODE_MUL = 0x37,
	KEYCODE_LALT = 0x38,
	KEYCODE_ALTGR = KEYCODE_LALT | 0x80,

	KEYCODE_SPACE = 0x39,
	KEYCODE_CAPSLOCK = 0x3a,

	KEYCODE_F1 = 0x3b,
	KEYCODE_F2,
	KEYCODE_F3,
	KEYCODE_F4,
	KEYCODE_F5,
	KEYCODE_F6,
	KEYCODE_F7,
	KEYCODE_F8,
	KEYCODE_F9,
	KEYCODE_F10, // = 0x44,

	KEYCODE_NUMLOCK = 0x45,
	KEYCODE_SCROLL_LOCK = 0x46,
	KEYCODE_NUM_7 = 0x47,
	KEYCODE_NUM_8,
	KEYCODE_NUM_9,
	KEYCODE_SUB = 0x4a,
	KEYCODE_NUM_4 = 0x4b,
	KEYCODE_NUM_5,
	KEYCODE_NUM_6,
	KEYCODE_ADD = 0x4e,
	KEYCODE_NUM_1 = 0x4f,
	KEYCODE_NUM_2,
	KEYCODE_NUM_3,
	KEYCODE_NUM_0 = 0x52,
	KEYCODE_POINT = 0x53,

KEYCODE__0x54 = 0x54,
KEYCODE__0x55 = 0x55,
KEYCODE__0x56 = 0x56,
	KEYCODE_F11 = 0x57,
	KEYCODE_F12 = 0x58,

	KEYCODE_NUM_ENTER = KEYCODE_ENTER | 0x80,

	KEYCODE_HOME = KEYCODE_NUM_7 | 0x80,
	KEYCODE_UP = KEYCODE_NUM_8 | 0x80,
	KEYCODE_PGUP = KEYCODE_NUM_9 | 0x80,

	KEYCODE_LEFT = KEYCODE_NUM_4 | 0x80,
	KEYCODE_RIGHT = KEYCODE_NUM_6 | 0x80,

	KEYCODE_END = KEYCODE_NUM_1 | 0x80,
	KEYCODE_DOWN = KEYCODE_NUM_2 | 0x80,
	KEYCODE_PGDOWN = KEYCODE_NUM_3 | 0x80,

	KEYCODE_DEL = 0xd3,
};

//kb_getiltä yms saatavat arvot epäkirjaimia antaville näppäimille
enum keys {
KEY__0x0000 = 0x0000,
	KEY_ESC = 27,
KEY__0x0c00 = 0x0c00,
KEY__0x0d00 = 0x0d00,
KEY__0x1a00 = 0x1a00,
KEY__0x1b00 = 0x1b00,
	KEY_LCTRL = 0x1d00,
	KEY_RCTRL = KEY_LCTRL | 0x8000, // escaped, 0xe000
KEY__0x2700 = 0x2700,
KEY__0x2800 = 0x2800,
KEY__0x2900 = 0x2900,
	KEY_LSHIFT = 0x2a00,
KEY__0x2b00 = 0x2b00,
KEY__0x3500 = 0x3500,
	KEY_RSHIFT = 0x3600,
	KEY_LALT = 0x3800,
	KEY_ALTGR = KEY_LALT | 0x8000,
	KEY_CAPSLOCK = 0x3a00,
	KEY_F1 = 0x3b00,
	KEY_F2,
	KEY_F3,
	KEY_F4,
	KEY_F5,
	KEY_F6,
	KEY_F7,
	KEY_F8,
	KEY_F9,
	KEY_F10, // = 0x4400,
	KEY_NUMLOCK = 0x4500,
	KEY_SCROLL_LOCK = 0x4600,
KEY__0x5400 = 0x5400,
KEY__0x5500 = 0x5500,
KEY__0x5600 = 0x5600,
	KEY_F11 = 0x5700,
	KEY_F12 = 0x5800,

	KEY_HOME = 0x4700 | 0x8000,
	KEY_UP = 0x4800 | 0x8000,
	KEY_PGUP = 0x4900 | 0x8000,

	KEY_LEFT = 0x4b00 | 0x8000,
	KEY_RIGHT = 0x4d00 | 0x8000,

	KEY_END = 0x4f00 | 0x8000,
	KEY_DOWN = 0x5000 | 0x8000,
	KEY_PGDOWN = 0x5100 | 0x8000,

	KEY_DEL = 0xd300,
};
#endif
